FORMAT: 1A
HOST: https://app.trayn.com/backend/rest

# Macro API 

# Group Template

**Plan Templates** are not assigned to a specific athlete and do not contain any date-related information. As soon as a template is assigned, all information from that template is transferred to the **Actual Plan** (see below) on the athlete.

## Templates [/s/macrocycle]
### List all plans [GET]
+ Response 200 (application/json)

        [{
          "id": 1, "duration": 50
        }, {
          "id": 2, "duration": 26
        }]

### Create a new plan [POST]
+ Response 201 (application/json)

### Update properties of a plan [PUT]
+ Response 200 (application/json)

# Template [/s/macrocycle/{id}]
## Details for a specific plan [GET]
+ Response 200 (application/json)

        {
          "id": 1, "duration": 50
        }
        
## Delete a plan [DELETE]
Deletes a plan completely.
+ Response 204

# Group Actual Plan

**Actual Plans** are a not-necessarily continuous set of workload assignments associated with the assignee of a plan. The association between the actual plan and its template is informative only and used to decide whether an update to a template should be transitively written to an actual plan.

## Macro Plan [/s/athlete/{id}/macro]
+ Parameters
    + id - athlete id
### List all workloads [GET]
+ Response 200 (application/json)

### Create new workload [POST]
+ Request (application/json)

        {
            "date": "2015-11-25",
            "workload": {

            }
        }

+ Response 201

# Group Planning Model
The planning model is used to initialize plan period and sub-periods in a macrocycle. References between the planning periods used in the macrocycle and the configuration from the planning model are not required.

## Planning Models [/s/planmodel]
### List [GET]
+ Response 200 (application/json)
### Create [POST]
+ Response 200 (application/json)

## Planning Model [/s/planmodel/{id}]
+ Parameters
    + id - ID of the planning model
### Read [GET]
+ Response 200 (application/json)
### Update [PUT]
+ Response 200 (application/json)
### Delete [DELETE]
+ Response 204

## Periods [/s/planmodel/{id}/period]
### List [GET]
+ Response 200 (application/json)
### Create [POST]
+ Response 200 (application/json)
## Period [/s/planmodel/{id}/period/{pId}]
### Read [GET]
+ Response 200 (application/json)
### Update [PUT]
+ Response 200 (application/json)
### Delete [DELETE]
+ Response 204

## Sub Periods [/s/planmodel/{id}/period/{pId}/subperiod]
### List [GET]
+ Response 200 (application/json)
### Create [POST]
+ Response 200 (application/json)
## Sub Period [/s/planmodel/{id}/period/{pId}/subperiod/{sId}]
### Read [GET]
+ Response 200 (application/json)
### Update [PUT]
+ Response 200 (application/json)
### Delete [DELETE]
+ Response 204